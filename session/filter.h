#ifndef FILTER_H
#define FILTER_H

#include "exam.h"

exam_info** filter(exam_info* array[], int size, bool (*check)(exam_info* element), int& result_size);

/*
ОПИСАНИЕ ФУНКЦИИ <function_name>:
    функция перебирает массив с исходными данными и все указатели на элементы,
    для которых функция отбора возвращает значение true, помещаются в новый
    массив, указатель на который возвращается функцией

ПАРАМЕТРЫ:
    array       - массив с исходными данными
    size        - размер массива с исходными данными
    check       - указатель на функцию отбора.
                  В качестве значения этого параметра можно передать имя
                  функции отбора, прототип которой приведён ниже
    result_data - параметр, передаваемый по ссылке - переменная, в которую
                  функция запишет размер результирующего массива

ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ
    указатель на массив из указателей на элементы, удовлетворяющие условию
    отбора (для которых функция отбора возвращает true)
*/


bool check_discipline(exam_info* element);

/*
ОПИСАНИЕ ФУНКЦИИ check_book_subscription_by_author:
    функция отбора - проверяет, является ли сдаваемый предмет историей беларуси

ПАРАМЕТРЫ:
    element - указатель на элемент, который нужно проверить

ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ
    true, если оценка выставлена по предмету "История Беларуси", и false в ином случае
*/


bool check_mark_value(exam_info* element);

/*
ОПИСАНИЕ ФУНКЦИИ check_book_subscription_by_date:
    функция отбора - проверяет, получил ли студент 7 и выше за экзамен

ПАРАМЕТРЫ:
    element - указатель на элемент, который нужно проверить

ВОЗВРАЩАЕМОЕ ЗНАЧЕНИЕ
    true, если оценка за предмет 7 и выше, и false в ином случае
*/

#endif